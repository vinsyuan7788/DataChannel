package application.io.spring.authorization.business.provider.service;

import java.util.HashMap;
import java.util.Map;
import application.io.spring.authorization.business.api.model.AuthorizationUserRoleResourceData;
import javax.annotation.Resource;
import net.sf.json.JSONObject;
import org.springframework.stereotype.Service;
import application.io.spring.common.utils.json.GsonUtils;
import application.io.spring.core.base.api.vo.PageVo;
import application.io.spring.core.base.provider.service.BaseServiceImpl;
import application.io.spring.authorization.business.api.service.AuthorizationUserRoleResourceDataService;
import application.io.spring.authorization.business.provider.dao.AuthorizationUserRoleResourceDataDAO;

/**
 *	This is a service implementation class auto-generated by underlying framework. <br/>
 *	<p>
 *  This class can be modified according to business requirement.
 *  </p>
 *	
 *  @Description 该服务接口实现类的内容可根据实际业务需求调整
 *	@author vinsy
 *  @date 2018/03/23
 */
@Service("authorizationUserRoleResourceDataService")
public class AuthorizationUserRoleResourceDataServiceImpl extends BaseServiceImpl<AuthorizationUserRoleResourceData> implements AuthorizationUserRoleResourceDataService {

	@Resource
    private AuthorizationUserRoleResourceDataDAO authorizationUserRoleResourceDataDAO;

	// 根据jsonb条件查询分页数据
	@SuppressWarnings("unchecked")
	@Override
	public PageVo<AuthorizationUserRoleResourceData> getJsonbPageableList(AuthorizationUserRoleResourceData authorizationUserRoleResourceData,Long offset, Long limit, String orderby){
		Map<String,Object> params = new HashMap<String,Object>();
		if (authorizationUserRoleResourceData != null) {
    		params = GsonUtils.GSON.fromJson(GsonUtils.GSON.toJson(authorizationUserRoleResourceData), Map.class); 
    	}

		// 将json字符串转为map并将其作为查询条件
		JSONObject  jasonObject0 = JSONObject.fromObject(authorizationUserRoleResourceData.getExtendedField());
		Map<String,Object> map0 = (Map<String,Object>)jasonObject0;
		for (Map.Entry<String,Object> entry0 : map0.entrySet()) {
		    params.put(entry0.getKey(), entry0.getValue());
		}
		params = this.getCondition(params, offset, limit, orderby);
    	PageVo<AuthorizationUserRoleResourceData> pageVo = this.getPageVo(params);
    	pageVo.setRows(authorizationUserRoleResourceDataDAO.getJsonbPageableList(params));
    	pageVo.setTotal(authorizationUserRoleResourceDataDAO.getJsonbListCount(params));
    	return pageVo;
	}
}
