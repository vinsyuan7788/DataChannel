<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="application.io.spring.technique.mybatis.provider.dao.MyBatisDAO" >
  
	<resultMap id="BaseResultMap" type="application.io.spring.technique.mybatis.api.model.MyBatis" >
    	<id column="id" property="id" jdbcType="BIGINT"/>
    	<result column="name" property="name" jdbcType="VARCHAR"/>
    	<result column="version" property="version" jdbcType="VARCHAR" />
    	<result column="release_time" property="releaseTime" jdbcType="TIMESTAMP"/>
    	<result column="official_url" property="officialUrl" jdbcType="VARCHAR"/>
    	<result column="contributor" property="contributor" jdbcType="VARCHAR"/>
    	<result column="remark" property="remark" jdbcType="VARCHAR"/>
    	<result column="extended_field" property="extendedField" jdbcType="OTHER" typeHandler="application.io.spring.technique.mybatis.utils.JSONTypeHandler"/>
	</resultMap>

	<sql id="Query_Where_Clause">
		<where>
			<if test="id != null"> and id = #{id,jdbcType=BIGINT}</if>
        	<if test="name != null and name != ''"> and name = #{name,jdbcType=VARCHAR}</if>
        	<if test="version != null and version != ''"> and version = #{version,jdbcType=VARCHAR}</if>
        	<if test="releaseTime != null and releaseTime != ''"> and release_time = #{releaseTime,jdbcType=TIMESTAMP} :: timestamp with time zone</if>
        	<if test="officialUrl != null and officialUrl != ''"> and official_url = #{officialUrl,jdbcType=VARCHAR}</if>
        	<if test="contributor != null and contributor != ''"> and contributor = #{contributor,jdbcType=VARCHAR}</if>
        	<if test="remark != null and remark != ''"> and remark = #{remark,jdbcType=VARCHAR}</if>
        	<if test="extendedField != null and extendedField != ''"> and extended_field = #{extendedField,jdbcType=OTHER,javaType=Object,typeHandler=application.io.spring.technique.mybatis.utils.JSONTypeHandler}</if>
    	</where>
 	</sql>
 
 	<sql id="Base_Column_List" >
    	id, name, version, release_time, official_url, contributor, remark, extended_field
    </sql>
  
  	<insert id="insertSelective" parameterType="application.io.spring.technique.mybatis.api.model.MyBatis" useGeneratedKeys="true" keyProperty="id">
    	insert into z_my_batis
    	<trim prefix="(" suffix=")" suffixOverrides="," >
    		<if test="id != null">id,</if>
        	<if test="name != null">name,</if>
        	<if test="version != null">version,</if>
        	<if test="releaseTime != null">release_time,</if>
      		<if test="officialUrl != null">official_url,</if>
      		<if test="contributor != null">contributor,</if>
      		<if test="remark != null">remark,</if>
      		<if test="extendedField != null">extended_field,</if>
    	</trim>
    	<trim prefix="values (" suffix=")" suffixOverrides="," >
    		<if test="id != null">#{id,jdbcType=BIGINT},</if>
      		<if test="name != null">#{name,jdbcType=VARCHAR},</if>
      		<if test="version != null">#{version,jdbcType=VARCHAR},</if>
      		<if test="releaseTime != null">#{releaseTime,jdbcType=TIMESTAMP},</if>
      		<if test="officialUrl != null">#{officialUrl,jdbcType=VARCHAR},</if>
      		<if test="contributor != null">#{contributor,jdbcType=VARCHAR},</if>
      		<if test="remark != null">#{remark,jdbcType=VARCHAR},</if>
      		<if test="extendedField != null" >#{extendedField,jdbcType=OTHER,javaType=Object,typeHandler=application.io.spring.technique.mybatis.utils.JSONTypeHandler},</if>
    	</trim>
	</insert>
	
<!--   
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from x_boxmanager
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from x_boxmanager
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.royalnu.passenger.inspection.boxmanager.api.model.Boxmanager" useGeneratedKeys="true" keyProperty="id">
    insert into x_boxmanager (id, real_name, card_number, 
      delivery_address, head_portrait, create_time, 
      update_time, operator, user_id
      )
    values (#{id,jdbcType=BIGINT}, #{realName,jdbcType=VARCHAR}, #{cardNumber,jdbcType=VARCHAR}, 
      #{deliveryAddress,jdbcType=VARCHAR}, #{headPortrait,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{operator,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT}
      )
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.royalnu.passenger.inspection.boxmanager.api.model.Boxmanager" >
    update x_boxmanager
    <set >
      <if test="realName != null" >
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="cardNumber != null" >
        card_number = #{cardNumber,jdbcType=VARCHAR},
      </if>
      <if test="deliveryAddress != null" >
        delivery_address = #{deliveryAddress,jdbcType=VARCHAR},
      </if>
      <if test="headPortrait != null" >
        head_portrait = #{headPortrait,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null" >
        operator = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.royalnu.passenger.inspection.boxmanager.api.model.Boxmanager" >
    update x_boxmanager
    set real_name = #{realName,jdbcType=VARCHAR},
      card_number = #{cardNumber,jdbcType=VARCHAR},
      delivery_address = #{deliveryAddress,jdbcType=VARCHAR},
      head_portrait = #{headPortrait,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      operator = #{operator,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

<select id="getPageableList" parameterType="java.util.Map" resultMap="BaseResultMap">select
    <include refid="Base_Column_List"/>from x_boxmanager
    <include refid="Query_Where_Clause"/>
    <if test="orderby != null "> order by ${orderby} </if>
    <if test="limit != null "> limit ${limit} </if>
    <if test="offset != null "> offset ${offset} </if>
</select>

<select id="getListCount" parameterType="java.util.Map" resultType="java.lang.Long">select count(*) from x_boxmanager
    <include refid="Query_Where_Clause"/>
</select>

<select id="selectByIdCollection" parameterType="java.util.Map" resultMap="BaseResultMap">select
    <include refid="Base_Column_List"/>from x_boxmanager where id in 
    <foreach collection="ids" item="valueitem" open="(" separator="," close=")">#{valueitem} </foreach>
</select>
  <delete id="deleteByCondition" parameterType="com.royalnu.passenger.inspection.boxmanager.api.model.Boxmanager" >
    delete from x_boxmanager
    <include refid="Query_Where_Clause"/>
  </delete> -->
</mapper>
